stages:
  - lint
  - release

.rules_mrs_and_protected:
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: never
  - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.base_job: &base_job
  image: registry.gitlab.com/thelabnyc/python:py312-node20
  before_script:
    - npm ci
  variables:
    NODE_ENV: development
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit

lint:
  <<: *base_job
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  stage: lint
  needs: []
  script:
    - npm run build
    - npm run lint
    - pip3 install pre-commit
    - pre-commit run --all-files
  cache:
    paths:
      - ${PRE_COMMIT_HOME}

.release_job: &release_job
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"
  stage: release
  needs:
    - lint

release:js:
  <<: *base_job
  <<: *release_job
  script:
    - echo "@thelabnyc:registry=https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" > .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
    - npm run build
    - npm publish

release:gitlab:
  <<: *release_job
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo 'noop'
  release:
    name: "Release $CI_COMMIT_TAG"
    description: "Release $CI_COMMIT_TAG. Tagged by $GITLAB_USER_LOGIN"
    tag_name: "$CI_COMMIT_TAG"
    ref: "$CI_COMMIT_TAG"
